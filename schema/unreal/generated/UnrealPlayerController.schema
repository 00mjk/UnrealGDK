// Copyright (c) Improbable Worlds Ltd, All Rights Reserved
// Note that this file has been generated automatically
package improbable.unreal;

import "improbable/vector3.schema";
import "unreal/core_types.schema";

component UnrealPlayerControllerSingleClientReplicatedData {
	id = 100000;
	UnrealFRotator field_targetviewrotation = 1; // COND_OwnerOnly
	improbable.Vector3f field_spawnlocation = 2; // COND_OwnerOnly
}
component UnrealPlayerControllerMultiClientReplicatedData {
	id = 100001;
	bool field_bhidden = 1; // COND_None
	bool field_breplicatemovement = 2; // COND_None
	bool field_btearoff = 3; // COND_None
	uint32 field_remoterole = 4; // COND_None
	UnrealObjectRef field_owner = 5; // COND_None
	bytes field_replicatedmovement = 6; // COND_SimulatedOrPhysics
	UnrealObjectRef field_attachmentreplication_attachparent = 7; // COND_Custom
	improbable.Vector3f field_attachmentreplication_locationoffset = 8; // COND_Custom
	improbable.Vector3f field_attachmentreplication_relativescale3d = 9; // COND_Custom
	UnrealFRotator field_attachmentreplication_rotationoffset = 10; // COND_Custom
	string field_attachmentreplication_attachsocket = 11; // COND_Custom
	UnrealObjectRef field_attachmentreplication_attachcomponent = 12; // COND_Custom
	uint32 field_role = 13; // COND_None
	bool field_bcanbedamaged = 14; // COND_None
	UnrealObjectRef field_instigator = 15; // COND_None
	UnrealObjectRef field_pawn = 16; // COND_None
	UnrealObjectRef field_playerstate = 17; // COND_None
}
component UnrealPlayerControllerCompleteData {
	id = 100002;
	UnrealObjectRef field_player = 1;
	UnrealObjectRef field_acknowledgedpawn = 2;
	UnrealObjectRef field_myhud = 3;
	UnrealObjectRef field_playercameramanager = 4;
	UnrealObjectRef field_playercameramanagerclass = 5;
	bool field_bautomanageactivecameratarget = 6;
	float field_smoothtargetviewrotationspeed = 7;
	bytes field_hiddenactors = 8;
	float field_lastspectatorstatesynchtime = 9;
	int32 field_clientcap = 10;
	UnrealObjectRef field_cheatclass = 11;
	bool field_bplayeriswaiting = 12;
	uint32 field_netplayerindex = 13;
	UnrealObjectRef field_pendingswapconnection = 14;
	UnrealObjectRef field_netconnection = 15;
	float field_inputyawscale = 16;
	float field_inputpitchscale = 17;
	float field_inputrollscale = 18;
	bool field_bshowmousecursor = 19;
	bool field_benableclickevents = 20;
	bool field_benabletouchevents = 21;
	bool field_benablemouseoverevents = 22;
	bool field_benabletouchoverevents = 23;
	bool field_bforcefeedbackenabled = 24;
	bytes field_clickeventkeys = 25;
	uint32 field_defaultmousecursor = 26;
	uint32 field_currentmousecursor = 27;
	uint32 field_defaultclicktracechannel = 28;
	uint32 field_currentclicktracechannel = 29;
	float field_hitresulttracedistance = 30;
	UnrealObjectRef field_inactivestateinputcomponent = 31;
	bool field_bshouldperformfulltickwhenpaused = 32;
	UnrealObjectRef field_currenttouchinterface = 33;
	UnrealObjectRef field_spectatorpawn = 34;
	bool field_bislocalplayercontroller = 35;
	bytes field_seamlesstravelcount = 36;
	bytes field_lastcompletedseamlesstravelcount = 37;
	UnrealObjectRef field_character = 38;
	UnrealObjectRef field_transformcomponent_attachparent = 39;
	bytes field_transformcomponent_attachchildren = 40;
	string field_transformcomponent_attachsocketname = 41;
	bool field_transformcomponent_babsolutelocation = 42;
	bool field_transformcomponent_babsoluterotation = 43;
	bool field_transformcomponent_babsolutescale = 44;
	bool field_transformcomponent_bvisible = 45;
	bool field_transformcomponent_bhiddeningame = 46;
	bool field_transformcomponent_bshouldupdatephysicsvolume = 47;
	bool field_transformcomponent_bboundschangetriggersstreamingdatarebuild = 48;
	bool field_transformcomponent_buseattachparentbound = 49;
	bool field_transformcomponent_babsolutetranslation = 50;
	improbable.Vector3f field_transformcomponent_relativelocation = 51;
	UnrealFRotator field_transformcomponent_relativerotation = 52;
	improbable.Vector3f field_transformcomponent_relativescale3d = 53;
	improbable.Vector3f field_transformcomponent_relativetranslation = 54;
	uint32 field_transformcomponent_mobility = 55;
	uint32 field_transformcomponent_detailmode = 56;
	improbable.Vector3f field_transformcomponent_componentvelocity = 57;
	bool field_transformcomponent_bvisualizecomponent = 58;
	uint32 field_transformcomponent_primarycomponenttick_tickgroup = 59;
	uint32 field_transformcomponent_primarycomponenttick_endtickgroup = 60;
	bool field_transformcomponent_primarycomponenttick_btickevenwhenpaused = 61;
	bool field_transformcomponent_primarycomponenttick_bcanevertick = 62;
	bool field_transformcomponent_primarycomponenttick_bstartwithtickenabled = 63;
	bool field_transformcomponent_primarycomponenttick_ballowtickondedicatedserver = 64;
	float field_transformcomponent_primarycomponenttick_tickinterval = 65;
	bytes field_transformcomponent_componenttags = 66;
	bytes field_transformcomponent_assetuserdata = 67;
	bool field_transformcomponent_breplicates = 68;
	bool field_transformcomponent_bnetaddressable = 69;
	bool field_transformcomponent_bcreatedbyconstructionscript = 70;
	bool field_transformcomponent_binstancecomponent = 71;
	bool field_transformcomponent_bautoactivate = 72;
	bool field_transformcomponent_bisactive = 73;
	bool field_transformcomponent_beditablewheninherited = 74;
	bool field_transformcomponent_bcaneveraffectnavigation = 75;
	bool field_transformcomponent_biseditoronly = 76;
	uint32 field_transformcomponent_creationmethod = 77;
	bytes field_transformcomponent_ucsmodifiedproperties = 78;
	UnrealFRotator field_controlrotation = 79;
	bool field_battachtopawn = 80;
	bool field_bisplayercontroller = 81;
	string field_statename = 82;
	uint32 field_primaryactortick_tickgroup = 83;
	uint32 field_primaryactortick_endtickgroup = 84;
	bool field_primaryactortick_btickevenwhenpaused = 85;
	bool field_primaryactortick_bcanevertick = 86;
	bool field_primaryactortick_bstartwithtickenabled = 87;
	bool field_primaryactortick_ballowtickondedicatedserver = 88;
	float field_primaryactortick_tickinterval = 89;
	float field_customtimedilation = 90;
	bool field_bnettemporary = 91;
	bool field_bnetstartup = 92;
	bool field_bonlyrelevanttoowner = 93;
	bool field_balwaysrelevant = 94;
	bool field_bnetloadonclient = 95;
	bool field_bnetuseownerrelevancy = 96;
	bool field_bblockinput = 97;
	bool field_ballowtickbeforebeginplay = 98;
	bool field_bactorenablecollision = 99;
	bool field_breplicates = 100;
	string field_netdrivername = 101;
	uint32 field_autoreceiveinput = 102;
	int32 field_inputpriority = 103;
	UnrealObjectRef field_inputcomponent = 104;
	uint32 field_inputconsumeoption = 105;
	float field_netculldistancesquared = 106;
	float field_netupdatefrequency = 107;
	float field_minnetupdatefrequency = 108;
	float field_netpriority = 109;
	bool field_bautodestroywhenfinished = 110;
	bool field_bcollidewhenplacing = 111;
	bool field_bfindcameracomponentwhenviewtarget = 112;
	bool field_brelevantfornetworkreplays = 113;
	bool field_bgenerateoverlapeventsduringlevelstreaming = 114;
	bool field_bcanbeincluster = 115;
	uint32 field_spawncollisionhandlingmethod = 116;
	UnrealObjectRef field_rootcomponent_attachparent = 117;
	bytes field_rootcomponent_attachchildren = 118;
	string field_rootcomponent_attachsocketname = 119;
	bool field_rootcomponent_babsolutelocation = 120;
	bool field_rootcomponent_babsoluterotation = 121;
	bool field_rootcomponent_babsolutescale = 122;
	bool field_rootcomponent_bvisible = 123;
	bool field_rootcomponent_bhiddeningame = 124;
	bool field_rootcomponent_bshouldupdatephysicsvolume = 125;
	bool field_rootcomponent_bboundschangetriggersstreamingdatarebuild = 126;
	bool field_rootcomponent_buseattachparentbound = 127;
	bool field_rootcomponent_babsolutetranslation = 128;
	improbable.Vector3f field_rootcomponent_relativelocation = 129;
	UnrealFRotator field_rootcomponent_relativerotation = 130;
	improbable.Vector3f field_rootcomponent_relativescale3d = 131;
	improbable.Vector3f field_rootcomponent_relativetranslation = 132;
	uint32 field_rootcomponent_mobility = 133;
	uint32 field_rootcomponent_detailmode = 134;
	improbable.Vector3f field_rootcomponent_componentvelocity = 135;
	bool field_rootcomponent_bvisualizecomponent = 136;
	uint32 field_rootcomponent_primarycomponenttick_tickgroup = 137;
	uint32 field_rootcomponent_primarycomponenttick_endtickgroup = 138;
	bool field_rootcomponent_primarycomponenttick_btickevenwhenpaused = 139;
	bool field_rootcomponent_primarycomponenttick_bcanevertick = 140;
	bool field_rootcomponent_primarycomponenttick_bstartwithtickenabled = 141;
	bool field_rootcomponent_primarycomponenttick_ballowtickondedicatedserver = 142;
	float field_rootcomponent_primarycomponenttick_tickinterval = 143;
	bytes field_rootcomponent_componenttags = 144;
	bytes field_rootcomponent_assetuserdata = 145;
	bool field_rootcomponent_breplicates = 146;
	bool field_rootcomponent_bnetaddressable = 147;
	bool field_rootcomponent_bcreatedbyconstructionscript = 148;
	bool field_rootcomponent_binstancecomponent = 149;
	bool field_rootcomponent_bautoactivate = 150;
	bool field_rootcomponent_bisactive = 151;
	bool field_rootcomponent_beditablewheninherited = 152;
	bool field_rootcomponent_bcaneveraffectnavigation = 153;
	bool field_rootcomponent_biseditoronly = 154;
	uint32 field_rootcomponent_creationmethod = 155;
	bytes field_rootcomponent_ucsmodifiedproperties = 156;
	improbable.Vector3f field_pivotoffset = 157;
	float field_initiallifespan = 158;
	bytes field_layers = 159;
	UnrealObjectRef field_parentcomponentactor = 160;
	UnrealObjectRef field_parentcomponent = 161;
	float field_spritescale = 162;
	string field_actorlabel = 163;
	string field_folderpath = 164;
	bool field_bactorlabeleditable = 165;
	bool field_bhiddened = 166;
	bool field_beditable = 167;
	bool field_blistedinsceneoutliner = 168;
	bool field_bhiddenedlayer = 169;
	bool field_blocklocation = 170;
	bool field_ballowreceivetickeventondedicatedserver = 171;
	bool field_bactorseamlesstraveled = 172;
	bool field_bignoresoriginshifting = 173;
	bool field_benableautolodgeneration = 174;
	bytes field_tags = 175;
	bytes field_blueprintcreatedcomponents = 176;
	bytes field_instancecomponents = 177;
}
type ServerViewSelfRequest {
	// Unsupported param type: FViewTargetTransitionParams field_transitionparams = 1;
}
type ServerViewSelfResponse {}
type ServerViewPrevPlayerRequest {}
type ServerViewPrevPlayerResponse {}
type ServerViewNextPlayerRequest {}
type ServerViewNextPlayerResponse {}
type ServerVerifyViewTargetRequest {}
type ServerVerifyViewTargetResponse {}
type ServerUpdateLevelVisibilityRequest {
	string field_packagename = 1;
	bool field_bisvisible = 2;
}
type ServerUpdateLevelVisibilityResponse {}
type ServerUpdateCameraRequest {
	improbable.Vector3f field_camloc = 1;
	int32 field_campitchandyaw = 2;
}
type ServerUpdateCameraResponse {}
type ServerUnmutePlayerRequest {
	bytes field_playerid = 1;
}
type ServerUnmutePlayerResponse {}
type ServerToggleAILoggingRequest {}
type ServerToggleAILoggingResponse {}
type ServerShortTimeoutRequest {}
type ServerShortTimeoutResponse {}
type ServerSetSpectatorWaitingRequest {
	bool field_bwaiting = 1;
}
type ServerSetSpectatorWaitingResponse {}
type ServerSetSpectatorLocationRequest {
	improbable.Vector3f field_newloc = 1;
	UnrealFRotator field_newrot = 2;
}
type ServerSetSpectatorLocationResponse {}
type ServerRestartPlayerRequest {}
type ServerRestartPlayerResponse {}
type ServerPauseRequest {}
type ServerPauseResponse {}
type ServerNotifyLoadedWorldRequest {
	string field_worldpackagename = 1;
}
type ServerNotifyLoadedWorldResponse {}
type ServerMutePlayerRequest {
	bytes field_playerid = 1;
}
type ServerMutePlayerResponse {}
type ServerCheckClientPossessionReliableRequest {}
type ServerCheckClientPossessionReliableResponse {}
type ServerCheckClientPossessionRequest {}
type ServerCheckClientPossessionResponse {}
type ServerChangeNameRequest {
	string field_s = 1;
}
type ServerChangeNameResponse {}
type ServerCameraRequest {
	string field_newmode = 1;
}
type ServerCameraResponse {}
type ServerAcknowledgePossessionRequest {
	UnrealObjectRef field_p = 1;
}
type ServerAcknowledgePossessionResponse {}
type OnServerStartedVisualLoggerRequest {
	bool field_bislogging = 1;
}
type OnServerStartedVisualLoggerResponse {}
type ClientWasKickedRequest {
	// Unsupported param type: FText field_kickreason = 1;
}
type ClientWasKickedResponse {}
type ClientVoiceHandshakeCompleteRequest {}
type ClientVoiceHandshakeCompleteResponse {}
type ClientUpdateLevelStreamingStatusRequest {
	string field_packagename = 1;
	bool field_bnewshouldbeloaded = 2;
	bool field_bnewshouldbevisible = 3;
	bool field_bnewshouldblockonload = 4;
	int32 field_lodindex = 5;
}
type ClientUpdateLevelStreamingStatusResponse {}
type ClientUnmutePlayerRequest {
	bytes field_playerid = 1;
}
type ClientUnmutePlayerResponse {}
type ClientTravelInternalRequest {
	string field_url = 1;
	uint32 field_traveltype = 2;
	bool field_bseamless = 3;
	// Unsupported param type: FGuid field_mappackageguid = 4;
}
type ClientTravelInternalResponse {}
type ClientTeamMessageRequest {
	UnrealObjectRef field_senderplayerstate = 1;
	string field_s = 2;
	string field_type = 3;
	float field_msglifetime = 4;
}
type ClientTeamMessageResponse {}
type ClientStopForceFeedbackRequest {
	UnrealObjectRef field_forcefeedbackeffect = 1;
	string field_tag = 2;
}
type ClientStopForceFeedbackResponse {}
type ClientStopCameraShakeRequest {
	UnrealObjectRef field_shake = 1;
	bool field_bimmediately = 2;
}
type ClientStopCameraShakeResponse {}
type ClientStopCameraAnimRequest {
	UnrealObjectRef field_animtostop = 1;
}
type ClientStopCameraAnimResponse {}
type ClientStartOnlineSessionRequest {}
type ClientStartOnlineSessionResponse {}
type ClientSpawnCameraLensEffectRequest {
	UnrealObjectRef field_lenseffectemitterclass = 1;
}
type ClientSpawnCameraLensEffectResponse {}
type ClientSetViewTargetRequest {
	UnrealObjectRef field_a = 1;
	// Unsupported param type: FViewTargetTransitionParams field_transitionparams = 2;
}
type ClientSetViewTargetResponse {}
type ClientSetSpectatorWaitingRequest {
	bool field_bwaiting = 1;
}
type ClientSetSpectatorWaitingResponse {}
type ClientSetHUDRequest {
	UnrealObjectRef field_newhudclass = 1;
}
type ClientSetHUDResponse {}
type ClientSetForceMipLevelsToBeResidentRequest {
	UnrealObjectRef field_material = 1;
	float field_forceduration = 2;
	int32 field_cinematictexturegroups = 3;
}
type ClientSetForceMipLevelsToBeResidentResponse {}
type ClientSetCinematicModeRequest {
	bool field_bincinematicmode = 1;
	bool field_baffectsmovement = 2;
	bool field_baffectsturning = 3;
	bool field_baffectshud = 4;
}
type ClientSetCinematicModeResponse {}
type ClientSetCameraModeRequest {
	string field_newcammode = 1;
}
type ClientSetCameraModeResponse {}
type ClientSetCameraFadeRequest {
	bool field_benablefading = 1;
	// Unsupported param type: FColor field_fadecolor = 2;
	// Unsupported param type: FVector2D field_fadealpha = 3;
	float field_fadetime = 4;
	bool field_bfadeaudio = 5;
}
type ClientSetCameraFadeResponse {}
type ClientSetBlockOnAsyncLoadingRequest {}
type ClientSetBlockOnAsyncLoadingResponse {}
type ClientReturnToMainMenuRequest {
	string field_returnreason = 1;
}
type ClientReturnToMainMenuResponse {}
type ClientRetryClientRestartRequest {
	UnrealObjectRef field_newpawn = 1;
}
type ClientRetryClientRestartResponse {}
type ClientRestartRequest {
	UnrealObjectRef field_newpawn = 1;
}
type ClientRestartResponse {}
type ClientResetRequest {}
type ClientResetResponse {}
type ClientRepObjRefRequest {
	UnrealObjectRef field_object = 1;
}
type ClientRepObjRefResponse {}
type ClientReceiveLocalizedMessageRequest {
	UnrealObjectRef field_message = 1;
	int32 field_switch = 2;
	UnrealObjectRef field_relatedplayerstate_1 = 3;
	UnrealObjectRef field_relatedplayerstate_2 = 4;
	UnrealObjectRef field_optionalobject = 5;
}
type ClientReceiveLocalizedMessageResponse {}
type ClientPrestreamTexturesRequest {
	UnrealObjectRef field_forcedactor = 1;
	float field_forceduration = 2;
	bool field_benablestreaming = 3;
	int32 field_cinematictexturegroups = 4;
}
type ClientPrestreamTexturesResponse {}
type ClientPrepareMapChangeRequest {
	string field_levelname = 1;
	bool field_bfirst = 2;
	bool field_blast = 3;
}
type ClientPrepareMapChangeResponse {}
type ClientPlaySoundAtLocationRequest {
	UnrealObjectRef field_sound = 1;
	improbable.Vector3f field_location = 2;
	float field_volumemultiplier = 3;
	float field_pitchmultiplier = 4;
}
type ClientPlaySoundAtLocationResponse {}
type ClientPlaySoundRequest {
	UnrealObjectRef field_sound = 1;
	float field_volumemultiplier = 2;
	float field_pitchmultiplier = 3;
}
type ClientPlaySoundResponse {}
type ClientPlayForceFeedbackRequest {
	UnrealObjectRef field_forcefeedbackeffect = 1;
	bool field_blooping = 2;
	string field_tag = 3;
}
type ClientPlayForceFeedbackResponse {}
type ClientPlayCameraShakeRequest {
	UnrealObjectRef field_shake = 1;
	float field_scale = 2;
	uint32 field_playspace = 3;
	UnrealFRotator field_userplayspacerot = 4;
}
type ClientPlayCameraShakeResponse {}
type ClientPlayCameraAnimRequest {
	UnrealObjectRef field_animtoplay = 1;
	float field_scale = 2;
	float field_rate = 3;
	float field_blendintime = 4;
	float field_blendouttime = 5;
	bool field_bloop = 6;
	bool field_brandomstarttime = 7;
	uint32 field_space = 8;
	UnrealFRotator field_customplayspace = 9;
}
type ClientPlayCameraAnimResponse {}
type ClientMutePlayerRequest {
	bytes field_playerid = 1;
}
type ClientMutePlayerResponse {}
type ClientMessageRequest {
	string field_s = 1;
	string field_type = 2;
	float field_msglifetime = 3;
}
type ClientMessageResponse {}
type ClientIgnoreMoveInputRequest {
	bool field_bignore = 1;
}
type ClientIgnoreMoveInputResponse {}
type ClientIgnoreLookInputRequest {
	bool field_bignore = 1;
}
type ClientIgnoreLookInputResponse {}
type ClientGotoStateRequest {
	string field_newstate = 1;
}
type ClientGotoStateResponse {}
type ClientGameEndedRequest {
	UnrealObjectRef field_endgamefocus = 1;
	bool field_biswinner = 2;
}
type ClientGameEndedResponse {}
type ClientForceGarbageCollectionRequest {}
type ClientForceGarbageCollectionResponse {}
type ClientFlushLevelStreamingRequest {}
type ClientFlushLevelStreamingResponse {}
type ClientEndOnlineSessionRequest {}
type ClientEndOnlineSessionResponse {}
type ClientEnableNetworkVoiceRequest {
	bool field_benable = 1;
}
type ClientEnableNetworkVoiceResponse {}
type ClientCommitMapChangeRequest {}
type ClientCommitMapChangeResponse {}
type ClientClearCameraLensEffectsRequest {}
type ClientClearCameraLensEffectsResponse {}
type ClientCapBandwidthRequest {
	int32 field_cap = 1;
}
type ClientCapBandwidthResponse {}
type ClientCancelPendingMapChangeRequest {}
type ClientCancelPendingMapChangeResponse {}
type ClientAddTextureStreamingLocRequest {
	improbable.Vector3f field_inloc = 1;
	float field_duration = 2;
	bool field_boverridelocation = 3;
}
type ClientAddTextureStreamingLocResponse {}
type ClientSetRotationRequest {
	UnrealFRotator field_newrotation = 1;
	bool field_bresetcamera = 2;
}
type ClientSetRotationResponse {}
type ClientSetLocationRequest {
	improbable.Vector3f field_newlocation = 1;
	UnrealFRotator field_newrotation = 2;
}
type ClientSetLocationResponse {}

component UnrealPlayerControllerRPCs {
	id = 100003;
	command ServerViewSelfResponse serverviewself(ServerViewSelfRequest);
	command ServerViewPrevPlayerResponse serverviewprevplayer(ServerViewPrevPlayerRequest);
	command ServerViewNextPlayerResponse serverviewnextplayer(ServerViewNextPlayerRequest);
	command ServerVerifyViewTargetResponse serververifyviewtarget(ServerVerifyViewTargetRequest);
	command ServerUpdateLevelVisibilityResponse serverupdatelevelvisibility(ServerUpdateLevelVisibilityRequest);
	command ServerUpdateCameraResponse serverupdatecamera(ServerUpdateCameraRequest);
	command ServerUnmutePlayerResponse serverunmuteplayer(ServerUnmutePlayerRequest);
	command ServerToggleAILoggingResponse servertoggleailogging(ServerToggleAILoggingRequest);
	command ServerShortTimeoutResponse servershorttimeout(ServerShortTimeoutRequest);
	command ServerSetSpectatorWaitingResponse serversetspectatorwaiting(ServerSetSpectatorWaitingRequest);
	command ServerSetSpectatorLocationResponse serversetspectatorlocation(ServerSetSpectatorLocationRequest);
	command ServerRestartPlayerResponse serverrestartplayer(ServerRestartPlayerRequest);
	command ServerPauseResponse serverpause(ServerPauseRequest);
	command ServerNotifyLoadedWorldResponse servernotifyloadedworld(ServerNotifyLoadedWorldRequest);
	command ServerMutePlayerResponse servermuteplayer(ServerMutePlayerRequest);
	command ServerCheckClientPossessionReliableResponse servercheckclientpossessionreliable(ServerCheckClientPossessionReliableRequest);
	command ServerCheckClientPossessionResponse servercheckclientpossession(ServerCheckClientPossessionRequest);
	command ServerChangeNameResponse serverchangename(ServerChangeNameRequest);
	command ServerCameraResponse servercamera(ServerCameraRequest);
	command ServerAcknowledgePossessionResponse serveracknowledgepossession(ServerAcknowledgePossessionRequest);
	command OnServerStartedVisualLoggerResponse onserverstartedvisuallogger(OnServerStartedVisualLoggerRequest);
	command ClientWasKickedResponse clientwaskicked(ClientWasKickedRequest);
	command ClientVoiceHandshakeCompleteResponse clientvoicehandshakecomplete(ClientVoiceHandshakeCompleteRequest);
	command ClientUpdateLevelStreamingStatusResponse clientupdatelevelstreamingstatus(ClientUpdateLevelStreamingStatusRequest);
	command ClientUnmutePlayerResponse clientunmuteplayer(ClientUnmutePlayerRequest);
	command ClientTravelInternalResponse clienttravelinternal(ClientTravelInternalRequest);
	command ClientTeamMessageResponse clientteammessage(ClientTeamMessageRequest);
	command ClientStopForceFeedbackResponse clientstopforcefeedback(ClientStopForceFeedbackRequest);
	command ClientStopCameraShakeResponse clientstopcamerashake(ClientStopCameraShakeRequest);
	command ClientStopCameraAnimResponse clientstopcameraanim(ClientStopCameraAnimRequest);
	command ClientStartOnlineSessionResponse clientstartonlinesession(ClientStartOnlineSessionRequest);
	command ClientSpawnCameraLensEffectResponse clientspawncameralenseffect(ClientSpawnCameraLensEffectRequest);
	command ClientSetViewTargetResponse clientsetviewtarget(ClientSetViewTargetRequest);
	command ClientSetSpectatorWaitingResponse clientsetspectatorwaiting(ClientSetSpectatorWaitingRequest);
	command ClientSetHUDResponse clientsethud(ClientSetHUDRequest);
	command ClientSetForceMipLevelsToBeResidentResponse clientsetforcemiplevelstoberesident(ClientSetForceMipLevelsToBeResidentRequest);
	command ClientSetCinematicModeResponse clientsetcinematicmode(ClientSetCinematicModeRequest);
	command ClientSetCameraModeResponse clientsetcameramode(ClientSetCameraModeRequest);
	command ClientSetCameraFadeResponse clientsetcamerafade(ClientSetCameraFadeRequest);
	command ClientSetBlockOnAsyncLoadingResponse clientsetblockonasyncloading(ClientSetBlockOnAsyncLoadingRequest);
	command ClientReturnToMainMenuResponse clientreturntomainmenu(ClientReturnToMainMenuRequest);
	command ClientRetryClientRestartResponse clientretryclientrestart(ClientRetryClientRestartRequest);
	command ClientRestartResponse clientrestart(ClientRestartRequest);
	command ClientResetResponse clientreset(ClientResetRequest);
	command ClientRepObjRefResponse clientrepobjref(ClientRepObjRefRequest);
	command ClientReceiveLocalizedMessageResponse clientreceivelocalizedmessage(ClientReceiveLocalizedMessageRequest);
	command ClientPrestreamTexturesResponse clientprestreamtextures(ClientPrestreamTexturesRequest);
	command ClientPrepareMapChangeResponse clientpreparemapchange(ClientPrepareMapChangeRequest);
	command ClientPlaySoundAtLocationResponse clientplaysoundatlocation(ClientPlaySoundAtLocationRequest);
	command ClientPlaySoundResponse clientplaysound(ClientPlaySoundRequest);
	command ClientPlayForceFeedbackResponse clientplayforcefeedback(ClientPlayForceFeedbackRequest);
	command ClientPlayCameraShakeResponse clientplaycamerashake(ClientPlayCameraShakeRequest);
	command ClientPlayCameraAnimResponse clientplaycameraanim(ClientPlayCameraAnimRequest);
	command ClientMutePlayerResponse clientmuteplayer(ClientMutePlayerRequest);
	command ClientMessageResponse clientmessage(ClientMessageRequest);
	command ClientIgnoreMoveInputResponse clientignoremoveinput(ClientIgnoreMoveInputRequest);
	command ClientIgnoreLookInputResponse clientignorelookinput(ClientIgnoreLookInputRequest);
	command ClientGotoStateResponse clientgotostate(ClientGotoStateRequest);
	command ClientGameEndedResponse clientgameended(ClientGameEndedRequest);
	command ClientForceGarbageCollectionResponse clientforcegarbagecollection(ClientForceGarbageCollectionRequest);
	command ClientFlushLevelStreamingResponse clientflushlevelstreaming(ClientFlushLevelStreamingRequest);
	command ClientEndOnlineSessionResponse clientendonlinesession(ClientEndOnlineSessionRequest);
	command ClientEnableNetworkVoiceResponse clientenablenetworkvoice(ClientEnableNetworkVoiceRequest);
	command ClientCommitMapChangeResponse clientcommitmapchange(ClientCommitMapChangeRequest);
	command ClientClearCameraLensEffectsResponse clientclearcameralenseffects(ClientClearCameraLensEffectsRequest);
	command ClientCapBandwidthResponse clientcapbandwidth(ClientCapBandwidthRequest);
	command ClientCancelPendingMapChangeResponse clientcancelpendingmapchange(ClientCancelPendingMapChangeRequest);
	command ClientAddTextureStreamingLocResponse clientaddtexturestreamingloc(ClientAddTextureStreamingLocRequest);
	command ClientSetRotationResponse clientsetrotation(ClientSetRotationRequest);
	command ClientSetLocationResponse clientsetlocation(ClientSetLocationRequest);
}
